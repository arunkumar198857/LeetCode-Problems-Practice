/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        
        
        List<List<Integer>> res = new ArrayList<>();
        boolean zigzag = true;
        if(root == null)
            return res;
        
        Queue<TreeNode> queue = new LinkedList<>();  
        queue.add(root);  
        while (!queue.isEmpty()) {  
          List<Integer> level = new ArrayList<>();  
          int count = queue.size();  
          for (int i = 0; i < count; i++) {  
            TreeNode node = queue.poll();  
            level.add(node.val);  
            if (node.left != null) {  
              queue.add(node.left);  
            }
            if (node.right != null) {  
              queue.add(node.right);  
            }  
          }
            if(zigzag){
                res.add(level);
                zigzag = false;
            }
            else{
                Collections.reverse(level);
                res.add(level);
                zigzag = true;
            }
        }
        return res;
    }
}
