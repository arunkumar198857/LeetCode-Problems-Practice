class Solution {
    public int maxAreaOfIsland(int[][] gridInput) {
        
        if(gridInput == null || gridInput.length < 1)
            return 0;
        
        int[][] grid = gridInput.clone();
        int maxArea = 0;
        for(int i = 0; i < grid.length; i++){
            for(int j = 0; j < grid[0].length; j++){
                if(grid[i][j]==1)
                    maxArea = Math.max(maxArea, dfsIslands(grid, i, j));
            }
        }
        return maxArea;
    }
    
    
    public int dfsIslands(int[][] grid, int i, int j){
        
        if(i < 0 || i >= grid.length || j < 0 || j >= grid[i].length || grid[i][j] == 0)
            return 0;
        
        grid[i][j] = 0;
        int area = 1;
        
        area += dfsIslands(grid, i+1, j);
        area += dfsIslands(grid, i-1, j);
        area += dfsIslands(grid, i, j+1);
        area += dfsIslands(grid, i, j-1);
        return area;
    }
}
