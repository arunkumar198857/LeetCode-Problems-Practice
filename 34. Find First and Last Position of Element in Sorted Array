class Solution {
    public int[] searchRange(int[] nums, int target) {
        if(nums == null || nums.length < 1)
            return new int[] {-1,-1};
        
        int leftIdx = binarySearchLeft(nums, target);
        int rightIdx = binarySearchRight(nums, target);
        
        return new int[] {leftIdx, rightIdx};
    }
    
    public int binarySearchLeft(int[] nums, int target){
        int start = 0;
        int end = nums.length - 1;
        int index = -1;
        
        while(start <= end){
            
            int mid = start + (end - start)/2;
            
            if(nums[mid] >= target)
                end = mid - 1;
            else
                start = mid + 1;
            
            if(nums[mid] == target)
                index = mid;
        }
        return index;
    }
    
    public int binarySearchRight(int[] nums, int target){
        int start = 0;
        int end = nums.length - 1;
        int index = -1;
        
        while(start <= end){
            
            int mid = start + (end - start)/2;
            
            if(nums[mid] <= target)
                start = mid + 1;
            else
                end = mid - 1;
            
            if(nums[mid] == target)
                index = mid;
        }
        return index;
    }
}
