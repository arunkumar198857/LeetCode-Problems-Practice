/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        
        if(head == null || head.next == null)
            return head;
        
        ListNode temp = new ListNode(0);
        int i = 0;
        temp.next = head;
        ListNode first = temp, second = temp;
        
        for(i=0; first.next != null; i++)
            first = first.next;
        
        for(int j = i - k % i;  j > 0; j--)
            second = second.next;
        
        first.next = temp.next;
        temp.next = second.next;
        second.next = null;
    
        return temp.next;
    }
}
