/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    int maxSum = Integer.MIN_VALUE;
    public int maxPathSum(TreeNode root) {
        checkMaxPath(root);
        return maxSum;
    }
    
    public int checkMaxPath(TreeNode root){
        if(root == null)    return 0;
        
        int leftPathSum = Math.max(checkMaxPath(root.left), 0);
        int rightPathSum = Math.max(checkMaxPath(root.right), 0);
        
        maxSum = Math.max(maxSum, leftPathSum + rightPathSum + root.val);
        
        return root.val + Math.max(leftPathSum, rightPathSum);
    }
}
