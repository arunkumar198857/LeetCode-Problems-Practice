/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public int maxDepth(Node root) {
        if(root == null)
            return 0;
        
        Queue<Node> q = new LinkedList<>();
        q.add(root);
        int depth = 0;
        
        while(!q.isEmpty()){
            int sz = q.size();
            
            for(int i = 0; i < sz; i++){
                Node temp = q.poll();
                
                for(Node n : temp.children)
                    q.add(n);
            }
            depth++;
        }
        return depth;
    }
}
