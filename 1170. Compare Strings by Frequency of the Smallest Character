class Solution {
    public int[] numSmallerByFrequency(String[] queries, String[] words) {
        
        Arrays.sort(words, (w1, w2) -> getValue(w1) - getValue(w2));
        int[] result = new int[queries.length];
        int i = 0;
        for(String query : queries){
            result[i] = words.length - find(words, getValue(query));
            i++;
        }
        return result;
    }
    
    
    HashMap<String, Integer> map = new HashMap<>();
    public int getValue(String str){
        if(map.containsKey(str))    return map.get(str);
        char lowest = 'z' + 1;
        int freq = 0;
        for(int i = 0; i < str.length(); i++){
            if(str.charAt(i) < lowest){
                lowest = str.charAt(i);
                freq = 1;
            }
            else if(str.charAt(i) == lowest)
                freq++;
        }
        map.put(str, freq);
        return freq;
    }
    
    public int find(String[] words, int bottomLimit){
        int low = 0;
        int high = words.length - 1;
        while(low < high){
            int mid = low + (high - low)/2;
            if(getValue(words[mid]) > bottomLimit)
                high = mid;
            else
                low = mid + 1;
        }
        if (low == high && getValue(words[low]) <= bottomLimit)
            return words.length;
        return low;
    }
}
