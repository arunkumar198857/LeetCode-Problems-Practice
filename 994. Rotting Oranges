class Solution {
    public int orangesRotting(int[][] gridInput) {
        if(gridInput == null)
            return -1;
        
        int grid[][] = gridInput;
        Set<String> rotten = new HashSet<>();
        Set<String> fresh = new HashSet<>();
        
        for(int i = 0; i < grid.length; i++){
            for(int j = 0; j < grid[0].length; j++){
                if(grid[i][j] == 1)
                    fresh.add(""+i+j);
                else if(grid[i][j] == 2)
                    rotten.add(""+i+j);
            }
        }
        
        int directions[][] = {{0,1}, {1,0}, {-1,0}, {0,-1}};
        int minutes = 0;
        while(fresh.size() > 0){
            
            Set<String> infected = new HashSet<>();
            for(String rottenOrange: rotten){
                int i = rottenOrange.charAt(0) - '0';
                int j = rottenOrange.charAt(1) - '0';
                
                for(int[] direction : directions){
                    int next_i = i + direction[0];
                    int next_j = j + direction[1];
                    
                    if(fresh.contains(""+next_i+next_j)){
                        infected.add(""+next_i+next_j);
                        fresh.remove(""+next_i+next_j);
                    }
                }
            }
            
            if(infected.size() == 0)
                return -1;
            
            rotten = infected;
            minutes++;
        }
        
        return minutes;
    }
}
