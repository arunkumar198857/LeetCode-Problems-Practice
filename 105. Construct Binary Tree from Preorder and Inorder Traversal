/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        return helperMethod(0, 0, inorder.length-1, preorder, inorder);
    }
    
    public TreeNode helperMethod(int preStart, int inStart, int inEnd, int[] preorder, int[] inorder){
        
        if(preStart > inorder.length - 1 || inStart > inEnd)    return null;
        
        TreeNode root = new TreeNode(preorder[preStart]);
        
        int index = 0;
        for(int i = inStart; i <= inEnd; i++)    if(inorder[i] == root.val)  index = i;
        
        root.left = helperMethod(preStart + 1, inStart, index -1, preorder, inorder);
        root.right = helperMethod(preStart + index - inStart + 1, index + 1, inEnd, preorder, inorder);
        return root;
    }
}
